{"version":3,"sources":["panels/mapWrapper.js","panels/map.js","panels/demo.js","panels/Home.js","img/minions-ambulance.gif","panels/Persik.js","App.js","index.js"],"names":["MapWrapper","React","memo","id","style","width","height","Map","props","useEffect","map","load","then","mapglAPI","center","altitude","longitude","zoom","key","destroy","Demo","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","coords","isGeolocationAvailable","isGeolocationEnabled","latitude","Home","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","Persik","left","className","persik","alt","App","useState","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","a","bridge","send","user","subscribe","detail","type","data","fetchData","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c723c071.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MapWrapper = React.memo(\r\n    () => {\r\n        return <div id=\"map-container\" style={{ width: '100%', height: '100%' }}></div>;\r\n    },\r\n    () => true,\r\n);\r\nexport default MapWrapper;","import { load } from '@2gis/mapgl';\r\n// or const { load } = require('@2gis/mapgl');\r\nimport MapWrapper from './mapWrapper';\r\nimport React,{ useEffect } from 'react';\r\n\r\nconst Map = (props) => {    \r\n    useEffect(() => {\r\n        let map;\r\n        load().then((mapglAPI) => {\r\n            map = new mapglAPI.Map('map-container', {\r\n                center: [props.altitude, props.longitude],\r\n                zoom: 1,\r\n                key: '6eaf2aea-95d4-42f6-895a-8e164bb6fe5f',\r\n            });\r\n        });\r\n\r\n        // Удаляем карту при размонтировании компонента\r\n        return () => map && map.destroy();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%' }}>\r\n            <MapWrapper/>\r\n        </div>\r\n    );\r\n};\r\nexport default Map","import React from \"react\";\r\nimport { useGeolocated } from \"react-geolocated\";\r\nimport Map from \"./map\";\r\n\r\nconst Demo = () => {\r\n    const { coords, isGeolocationAvailable, isGeolocationEnabled } =\r\n        useGeolocated({\r\n            positionOptions: {\r\n                enableHighAccuracy: false,\r\n            },\r\n            userDecisionTimeout: 5000,\r\n        });    \r\n    return !isGeolocationAvailable ? (<div>Your browser does not support Geolocation</div>) : !isGeolocationEnabled ? (<div>Geolocation is not enabled</div> ) : coords ? (\r\n    <div id=\"1\">\r\n        <Map altitude={coords.latitude} longitude={coords.longitude}/>\r\n        {/* latitude={coords.latitude} longitude={coords.longitude} */}\r\n         <table>\r\n            <tbody>\r\n            <tr>\r\n                    <td>latitude</td>\r\n                    <td>{coords.latitude}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>longitude</td>\r\n                    <td>{coords.longitude}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n       \r\n    ) : (\r\n        <div>Getting the location data&hellip; </div>\r\n    );\r\n};\r\n\r\nexport default Demo;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Demo from './demo';\r\n\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Example</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\r\n\t\t\t<Demo/>\r\n\t\t\t<Div>\r\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\r\n\t\t\t\t\tShow me the Persik, please\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/minions-ambulance.be615813.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\nimport persik from '../img/minions-ambulance.gif';\r\nimport './Persik.css';\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('bright_light')\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tsetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider scheme={scheme}>\r\n\t\t\t<AdaptivityProvider>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout popout={popout}>\r\n\t\t\t\t\t\t<SplitCol>\r\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\r\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}